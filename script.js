const inputNamePlayer = document.querySelector('.text');
const inputPasswordPlayer = document.querySelector('.password');
const btnEnterPlayer = document.querySelector('.form__text_btn');
const section1 = document.querySelector('.name-player');
const btnTaskNote = document.querySelector('.btn-note');
const btnsListenNote = document.querySelectorAll('.btn_butterfly');
const btnsAnswerRight = document.querySelectorAll('.btn_answer');
const btnReset = document.querySelector('.reset');
const btnCheck = document.querySelector('.check');
const textLeo = document.querySelector('.leo__text');
const notes = document.querySelectorAll('.note');

//–≤–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –∏ –ø–∞—Ä–æ–ª—å, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
btnEnterPlayer.addEventListener('click', function () {
  inputPasswordPlayer.value.toLowerCase();
  const name = inputNamePlayer.value;
  const firstLetterName = name.slice(0, 1).toUpperCase();
  const lettersName = name.slice(1);
  let nameLetters = [];
  nameLetters.push(firstLetterName, lettersName);
  console.log(nameLetters);
  const fullName = nameLetters.join('');
  if (inputPasswordPlayer.value === '—Å–∫—Ä–∏–ø–∫–∞') {
    document.querySelector('.name-player').classList.add('hidden');
    document.querySelector('.main').classList.remove('hidden');
    document.querySelector(
      '.leo__text'
    ).textContent = `–ü—Ä–∏–≤–µ—Ç, ${fullName}! –†–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è! –°–µ–≥–æ–¥–Ω—è —É –Ω–∞—Å —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –≤
    –º–∏—Ä–µ
    –∑–≤—É–∫–æ–≤! –ù–∞—á–Ω–µ–º?`;
    setTimeout(function () {
      document.querySelector(
        '.leo__text'
      ).textContent = `–í—ã–ø–æ–ª–Ω–∏ –∑–∞–¥–∞–Ω–∏–µ. –ö–æ–≥–¥–∞ –¥–æ–≥–∞–¥–∞–µ—à—å—Å—è, –∫–∞–∫–∞—è –±–∞–±–æ—á–∫–∞ —Å–µ–ª–∞ –Ω–∞ —Ü–≤–µ—Ç–æ–∫ - –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–†–û–í–ï–†–ò–¢–¨" üòâ`;
    }, 5000);
  }
});

const notesVariantAnswer = Array.from([notes[0], notes[2], notes[4]]);

//–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –∑–∞–¥–∞–Ω–∏–µ–º
btnTaskNote.addEventListener('click', function (e) {
  notesVariantAnswer[0].play();
});

const num = [0, 1, 2];

function renderRandomImage() {
  const randomImage = num
    .map((image) => image)
    .sort(() => Math.random() - 0.5)
    .map(
      (image) =>
        ` <div class="btn_sound">
                        <button type="button" class="btn_butterfly btn_butterfly_${image}" data-butterfly="${image}"></button>
                        <label> 
                        –ñ–ú–ò
                        <input type="radio" name="answer" value="answer" class="btn_answer btn_answer_${image}" data-answer=${image}>  
                      <span class="btn_custom"></span>
                        </label>
                    </div>
      `
    )
    .join('\n');
  document.querySelector('.btns').insertAdjacentHTML('afterbegin', randomImage);

  document.querySelector('.btns').addEventListener('click', function (e) {
    if (e.target.classList.contains('btn_butterfly')) {
      console.log('e.target', e.target);
      const butterfly = e.target.getAttribute('data-butterfly');
      const notesVariantAnswer = [notes[0], notes[2], notes[4]];
      //—Å–≤—è–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –∞—É–¥–∏–æ
      Array.from(document.querySelector('.btns').children).forEach(function (
        el,
        i
      ) {
        console.log(el);
        if (butterfly == i) {
          notesVariantAnswer[i].play();
        }
      });
    }

    if (e.target.classList.contains('btn_custom')) {
      const btnCheck = document.querySelector('.check');
      btnCheck.classList.remove('disabled');
      btnCheck.disabled = false;
    }

    //–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–ª–∏ –Ω–µ—Ç

    if (e.target.classList.contains('btn_answer')) {
      console.log('e.target', e.target);
      // e.target.classList.toggle('answer');
      let letter = [];
      if (e.target.getAttribute('data-answer') != 0) {
        console.log(e.target.getAttribute('data-answer'));
        letter.push('–±');
        console.log(letter);
      } else {
        letter.push('a');
        console.log(letter);
      }

      //–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
      document.querySelector('.check').addEventListener('click', function () {
        console.log('letter', letter);
        if (letter.includes('a')) {
          console.log('—É—É—É');
          document.querySelector('.main').classList.add('hidden');
          document.querySelector('.answer').classList.remove('hidden');
          //–∑–≤—É–∫–∏ –ø–∏–∞–Ω–∏–Ω–æ
          // –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –∫–ª–∞—Å—Å–æ–º .key ‚Äî —ç—Ç–æ –Ω–∞—à–∏ –∫–ª–∞–≤–∏—à–∏
          const keys = document.querySelectorAll('.key');
          // –ø–æ–ª—É—á–∞–µ–º –æ–±–ª–∞—Å—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∫—É–¥–∞ –±—É–¥–µ–º –≤—ã–≤–æ–¥–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ—Ç
          const note = document.querySelector('.nowplaying');
          // —Ç—É—Ç —Ö—Ä–∞–Ω—è—Ç—Å—è –≤—Å–µ –Ω–∞—à–∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏
          const hints = document.querySelectorAll('.hints');

          //–ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –Ω–∞–∂–∞—Ç–æ–π –∫–ª–∞–≤–∏—à–∏
          //–ü–æ —ç—Ç–æ–º—É –∫–æ–¥—É –Ω–∞—Ö–æ–¥–∏–º –∫–ª–∞–≤–∏—à—É –ø–∏–∞–Ω–∏–Ω–æ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–π –∞–Ω–∏–º–∞—Ü–∏—é –Ω–∞–∂–∞—Ç–∏—è
          //–±–µ—Ä—ë–º –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è –∫–ª–∞–≤–∏—à–∏ —Ç–µ–∫—Å—Ç –Ω–æ—Ç—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
          //–ü–æ —ç—Ç–æ–º—É –∂–µ –∫–æ–¥—É –Ω–∞–∂–∞—Ç–æ–π –∫–ª–∞–≤–∏—à–∏ –Ω–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—ã–π –∞—É–¥–∏–æ—Ñ–∞–π–ª –∏ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –µ–≥–æ.

          // –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∑–≤—É–∫ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–ª–∞–≤–∏—à—É
          function playNote(e) {
            // –ø–æ–ª—É—á–∞–µ–º –∞—É–¥–∏–æ–æ–±—ä–µ–∫—Ç –ø–æ –∫–æ–¥—É –Ω–∞–∂–∞—Ç–æ–π –∫–ª–∞–≤–∏—à–∏
            const audio = document.querySelector(
                `audio[data-key="${e.keyCode}"]`
              ),
              // –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∂–∞—Ç—É—é –∫–ª–∞–≤–∏—à—É –Ω–∞ –ø–∏–∞–Ω–∏–Ω–æ –ø–æ –∫–æ–¥—É –Ω–∞–∂–∞—Ç–æ–π –∫–ª–∞–≤–∏—à–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
              key = document.querySelector(`.key[data-key="${e.keyCode}"]`);

            // –µ—Å–ª–∏ –º—ã –Ω–∞–∂–∞–ª–∏ –∫–ª–∞–≤–∏—à—É, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ –±—ã–ª–æ –≤ —Å–ø–∏—Å–∫–µ, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –Ω–∏–∫–∞–∫–æ–π –∑–≤—É–∫ –Ω–µ –∏–≥—Ä–∞–µ–º
            if (!key) return;

            // –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ—Ç—ã
            const keyNote = key.getAttribute('data-note');

            // –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∞–Ω–∏–º–∞—Ü–∏—é –Ω–∞–∂–∞—Ç–∏—è
            key.classList.add('playing');
            // –≤—ã–≤–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ—Ç—ã
            note.innerHTML = keyNote;
            // –±—É–¥–µ–º –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å –∫–∞–∂–¥–æ–µ –∞—É–¥–∏–æ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞
            audio.currentTime = 0;
            // –≤–∫–ª—é—á–∞–µ–º –∑–≤—É–∫ –Ω–∞–∂–∞—Ç–æ–π –∫–ª–∞–≤–∏—à–∏
            audio.play();
          }

          // –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–∞–∂–¥–æ–π –∫–ª–∞–≤–∏—à–∏ –∏ —Å—Ä–∞–∑—É –≤–∫–ª—é—á–∞–µ–º –∑–≤—É–∫
          document.addEventListener('keydown', playNote);

          // —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —É–±–∏—Ä–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–ª–∞–≤–∏—à—É
          function removeTransition(e) {
            // –µ—Å–ª–∏ —É –∫–ª–∞–≤–∏—à–∏ —É–∂–µ –Ω–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ transform
            if (e.propertyName !== 'transform') return;
            // —É–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å playing –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è –∫–ª–∞–≤–∏—à–∏
            this.classList.remove('playing');
          }

          // —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫
          function hintsOn(e, index) {
            // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ –≤—Å–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ —Å –ø–ª–∞–≤–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ
            // –≤—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–æ–∑–∏—Ü–∏–∏ –∫–ª–∞–≤–∏—à–∏
            e.setAttribute('style', 'transition-delay:' + index * 50 + 'ms');
          }

          // –≤–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫
          hints.forEach(hintsOn);

          // –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–ª–∞–≤–∏—à–∏, –≥–¥–µ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –∞–Ω–∏–º–∞—Ü–∏—è, –∏ —É–±–∏—Ä–∞–µ–º –æ–±–≤–æ–¥–∫—É —Å —Ç–µ—Ö –∫–ª–∞–≤–∏—à, –≥–¥–µ –æ–Ω–∞ —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª–∞ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å—Å—è
          keys.forEach((key) =>
            key.addEventListener('transitionend', removeTransition)
          );

          // –∑–∞–ø—É—Å–∫–∞–µ–º –∞—É–¥–∏–æ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–ª–∞–≤–∏—à–∏
          //–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–ª–∞–≤–∏—à–∏ –∏ –Ω–∞ –∫–∞–∂–¥—É—é –Ω–∞–∑–Ω–∞—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
          for (let i = 0; i < keys.length; i++) {
            keys[i].addEventListener('click', function () {
              const keyClick = document.querySelector(`.key-${i}`); //–ø–æ–ª—É—á–∞–µ–º –∫–∞–∂–¥—É—é –∫–ª–∞–≤–∏—à—É –ø–æ —Ü–∏–∫–ª—É
              // –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∞–Ω–∏–º–∞—Ü–∏—é –Ω–∞–∂–∞—Ç–∏—è
              keyClick.classList.add('playing');
              const audioClick = document.querySelector(`.play-${i}`); // –ø–æ–ª—É—á–∞–µ–º –∫–∞–∂–¥–æ–µ –∞—É–¥–∏–æ –ø–æ —Ü–∏–∫–ª—É
              audioClick.currentTime = 0; // –±—É–¥–µ–º –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å –∫–∞–∂–¥–æ–µ –∞—É–¥–∏–æ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞
              audioClick.play(); // –≤–∫–ª—é—á–∞–µ–º –∑–≤—É–∫ –Ω–∞–∂–∞—Ç–æ–π –∫–ª–∞–≤–∏—à–∏.
            });
          }
        } else {
          console.log('ttt');

          document.querySelector('.main').classList.add('hidden');
          document.querySelector('.wrong-answer').classList.remove('hidden');
          //–ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π
          document
            .querySelector('.reset')
            .addEventListener('click', function () {
              document.querySelector('.wrong-answer').classList.add('hidden');
              document.querySelector('.main').classList.remove('hidden');
              document.querySelectorAll('.btn_answer').forEach((el) => {
                console.log(el);
                el.checked = false;
                letter = null;
              });
            });
        }
      });
    }
  });
}

function wrongAnswer() {}

renderRandomImage();
